---
- name: Ensure SSL NGINX directory exists
  file:
    name: /etc/nginx/ssl
    state: directory

- name: "Ensure {{ moodlebox_certbot_dir }} directory exists"
  file:
    path: "{{ moodlebox_certbot_dir }}/etc"
    state: directory

- name: Copy cf.ini into etc folder
  template:
    src: cf.ini.j2
    dest: "{{ moodlebox_certbot_dir }}/etc/cf.ini"
    mode: 0700
    owner: root
    group: root

- name: Create `docker-cert-moodlebox.sh` SH script for obtaining and installing certs
  template:
    src: docker-cert.sh.j2
    dest: "{{ moodlebox_certbot_dir }}/docker-cert-moodlebox.sh"
    mode: 0700
    owner: root
    group: root

- name: Execute previously-copied SH script
  shell:
    chdir: "{{ moodlebox_certbot_dir }}"
    cmd: ./docker-cert-moodlebox.sh certonly
  register: moodlebox_cert_check
  check_mode: no
  changed_when: >-
    moodlebox_cert_check.stdout.find('Certificate not yet due for renewal; no action taken') == -1

- name: Create a cronjob to automatically renew the cert
  cron:
    name: ACME Let's Encrypt @MoodleBox
    special_time: daily
    user: root
    job: "cd {{ moodlebox_certbot_dir }}; ./docker-cert-moodlebox.sh certonly"
    cron_file: ansible_docker-cert-moodlebox

- name: Remove default site
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/nginx/sites-enabled/default
    - /etc/nginx/sites-available/default
  notify: restart web services
- name: Configure nginx
  template:
    src: etc/nginx/sites-available/moodle.j2
    dest: /etc/nginx/sites-available/moodle.conf
  notify: restart web services
- name: Create a symbolic link
  file:
    src: /etc/nginx/sites-available/moodle.conf
    dest: /etc/nginx/sites-enabled/moodle.conf
    owner: root
    group: root
    state: link
  notify: restart web services

- meta: flush_handlers